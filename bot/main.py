# Telethon utility #pip install telethon
from telethon import TelegramClient, events
from telethon.tl.custom import Button

import configparser  # Library for reading from a configuration file, # pip install configparser

#### Access credentials
config = configparser.ConfigParser()  # Define the method to read the configuration file
config.read('config.ini')  # read config.ini file

api_id = config.get('default', 'api_id')  # get the api id
api_hash = config.get('default', 'api_hash')  # get the api hash
BOT_TOKEN = config.get('default', 'BOT_TOKEN')  # get the bot token

# Create the client and the session called session_master. We start the session as the Bot (using bot_token)
client = TelegramClient('sessions/session_master', api_id, api_hash).start(bot_token=BOT_TOKEN)


@client.on(events.NewMessage(pattern='/(?i)start'))
async def start(event):
    sender = await event.get_sender()
    SENDER = sender.id
    text = "<b>AIST NEWS –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!</b> ‚úâÔ∏è\n\n" + \
           "–°–µ–π—á–∞—Å, –¥–ª—è —É—Å–ø–µ—à–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –¥–∞–ª–µ–µ, –≤—ã–±–µ—Ä–∏ –∏–∑ –∫–∞–∫–∏—Ö —Ä–µ—Å—É—Ä—Å–æ–≤, –≤—ã —Ö–æ—Ç–∏—Ç–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –∏ –ø–æ–ª—É—á–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏? \n\n" + \
           "<b>/help</b> ‚Üí –£ —Ç–µ–±—è –≤–æ–∑–Ω–∏–∫–ª–∏ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –≤–æ–ø—Ä–æ—Å—ã? –ù–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π! –û—Ç–ø—Ä–∞–≤–ª—è–π –∫–æ–º–∞–Ω–¥—É –∏ –ø–æ–ª—É—á–∞–π –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µüß°"
    button1 = Button.inline("Telegram –∫–∞–Ω–∞–ª—ã", data="button_telegram_chanel_news")
    button2 = Button.inline("–ù–æ–≤–æ—Å—Ç–Ω—ã–µ —Å–∞–π—Ç—ã", data="button_website_news")
    await client.send_message(SENDER, text, parse_mode="HTML", buttons=[button1, button2])


@client.on(events.CallbackQuery(data="button_telegram_chanel_news"))
async def button_telegram_chanel_news(event):
    sender = await event.get_sender()
    SENDER = sender.id

    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, —É–¥–∞–ª—è—è –∫–Ω–æ–ø–∫—É
    await event.edit(buttons=None)

    text = "–û—Ç–ø—Ä–∞–≤—å –≤ —á–∞—Ç <b>—Å—Å—ã–ª–∫—É</b> –∏–ª–∏ <b>id</b> —Ç–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª–∞, –æ—Ç –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—á–µ—à—å –ø–æ–ª—É—á–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏!</b> üì®\n\n"+ \
           "<i>–í–æ–∑–º–æ–∂–µ–Ω –≤—ã–±–æ—Ä –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤</i>\n"
    button1 = Button.inline("–ó–∞–∫–æ–Ω—á–∏—Ç—å –≤—ã–±–æ—Ä", data="button_news_change")

    await client.send_message(SENDER, text, parse_mode="HTML", buttons=button1)


@client.on(events.CallbackQuery(data="button_news_change"))
async def button_news_change(event):
    sender = await event.get_sender()
    SENDER = sender.id

    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, —É–¥–∞–ª—è—è –∫–Ω–æ–ø–∫—É
    await event.edit(buttons=None)

    text = "<b>–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞ –∫–∞–∫–∏–º–∏ –Ω–æ–≤–æ—Å—Ç—è–º–∏ —Ö–æ—Ç–∏—Ç–µ —Å–ª–µ–¥–∏—Ç—å:</b> \n\n" + \
           "  <b>1.</b> –†–æ—Å—Å–∏—è\n" + \
           "  <b>2.</b> –ú–∏—Ä\n" + \
           "  <b>3.</b> –°–ø–æ—Ä—Ç\n" + \
           "  <b>4.</b> –≠–∫–æ–Ω–æ–º–∏–∫–∞\n\n"+ \
           "<i>–í–æ–∑–º–æ–∂–µ–Ω –≤—ã–±–æ—Ä –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤</i>\n"
    button1 = Button.inline("1Ô∏è‚É£", data="button_character_1")
    button2 = Button.inline("2Ô∏è‚É£", data="button_character_2")
    button3 = Button.inline("3Ô∏è‚É£", data="button_character_3")
    button4 = Button.inline("4Ô∏è‚É£", data="button_character_4")
    button5 = Button.inline("–ü—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ –Ω–æ–≤–æ—Å—Ç—è–º", data="button_character_change")

    await client.send_message(SENDER, text, parse_mode="HTML", buttons=[[button1, button2, button3, button4], [button5]])

@client.on(events.CallbackQuery(data="button_website_news"))
async def button_website_news(event):
    sender = await event.get_sender()
    SENDER = sender.id

    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, —É–¥–∞–ª—è—è –∫–Ω–æ–ø–∫—É
    await event.edit(buttons=None)

    text = "<b>–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Ä–µ—Å—É—Ä—Å—ã –∑–∞ –∫–æ—Ç–æ—Ä—ã–º–∏ –∂–µ–ª–∞–µ—Ç–µ —Å–ª–µ–¥–∏—Ç—å:</b> \n\n" + \
           "<i>–û–ø–∏—Å–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤:</i>\n" + \
           "  <b>1.</b> –°–∞–π—Ç 1 - –æ–ø–∏—Å–∞–Ω–∏–µ\n" + \
           "  <b>2.</b> –°–∞–π—Ç 2 - –æ–ø–∏—Å–∞–Ω–∏–µ\n" + \
           "  <b>3.</b> –°–∞–π—Ç 3 - –æ–ø–∏—Å–∞–Ω–∏–µ\n" + \
           "  <b>4.</b> –°–∞–π—Ç 4 - –æ–ø–∏—Å–∞–Ω–∏–µ\n\n"+ \
           "<i>–í–æ–∑–º–æ–∂–µ–Ω –≤—ã–±–æ—Ä –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤</i>\n"
    button1 = Button.inline("1Ô∏è‚É£", data="button_news_1")
    button2 = Button.inline("2Ô∏è‚É£", data="button_news_2")
    button3 = Button.inline("3Ô∏è‚É£", data="button_news_3")
    button4 = Button.inline("4Ô∏è‚É£", data="button_news_4")
    button5 = Button.inline("–ó–∞–∫–æ–Ω—á–∞—Ç—å –≤—ã–±–æ—Ä", data="button_news_change")

    await client.send_message(SENDER, text, parse_mode="HTML", buttons=[[button1, button2, button3, button4],[button5]])

# Define the /help command
@client.on(events.NewMessage(pattern='/(?i)help'))
async def help(event):
    sender = await event.get_sender()
    SENDER = sender.id
    text = "<b>–ü–æ–¥—Ä–±–æ–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</b> ü§ñÔ∏è\n\n" + \
           "<i>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</i>\n" + \
           "  <b>1.</b> –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ \n" + \
           "  <b>2.</b> –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é \n" + \
           "  <b>3.</b> –í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–∫—É–¥–∞ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–≤–ª–µ–∫–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –∏ –∫–∞–∫–∏–µ –∏–º–µ–Ω–Ω–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∏. \n" + \
           "  <b>4.</b> –ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –ø—Ä–æ–ª–∏—Å—Ç—ã–≤–∞–Ω–∏–µ–º –Ω–æ–≤–æ—Å—Ç–µ–π. \n\n" + \
           "<i>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è —Å—Ç–æ—Ä–æ–Ω–∞ –ø—Ä–æ–µ–∫—Ç–∞:</i>\n" + \
           "  <b>1.</b> –†–µ–∫—É—Ä—Ä–µ–Ω—Ç–Ω—ã–µ –Ω–µ–π—Ä–æ–Ω–Ω—ã–µ —Å–µ—Ç–∏ \n" + \
           "  <b>2.</b> –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–µ—Ä—ã \n" + \
           "  <b>3.</b> –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞/—Å–±–æ—Ä—â–∏–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–π —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Ä–µ—Å—É—Ä—Å–æ–≤/telegram –∫–∞–Ω–∞–ª–æ–≤ \n\n" + \
           "<i>–ë–∏–∑–Ω–µ—Å —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞:</i>\n" + \
           "  <b>1.</b> –õ–∏—á–Ω—ã–π –º–∞—Å–∫–æ—Ç \n" + \
           "  <b>2.</b> –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π\n\n" + \
           "<i>–°–æ—Å—Ç–∞–≤ –∫–æ–º–∞–Ω–¥—ã:</i>\n" + \
           "  <b>1.</b> –ö–∞—à–∏–Ω –ú–∞–∫—Å–∏–º –ò–≥–æ—Ä–µ–≤–∏—á \n" + \
           "  <b>2.</b> –ñ–∏–º–æ–ª–æ—Å—Ç–Ω–æ–≤–∞ –ê–Ω–Ω–∞ –í–∞—Å–∏–ª—å–µ–≤–Ω–∞ \n" + \
           "  <b>3.</b> –ü–æ–∑–¥–Ω—è–∫–æ–≤ –ê–ª–µ–∫—Å–µ–π –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–∏—á \n" + \
           "  <b>4.</b> –ö—É–∑–Ω–µ—Ü–æ–≤–∞ –ú–∞—Ä–∏—è –ü–∞–≤–ª–æ–≤–Ω–∞\n" + \
           "  <b>5.</b> –ì–ª—É—à–∫–æ –ê–ª–∏—Å–∞ –ê–ª–µ–∫—Å–µ–µ–≤–Ω–∞ \n" + \
           "  <b>6.</b> –†–∞–∑–∂–∏–≤–∏–Ω –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –°–µ—Ä–≥–µ–µ–≤–∏—á\n" + \
           "  <b>7.</b> –ö–∞–ª–∏—Å—Ç—Ä–∞—Ç–æ–≤–∞ –°–≤–µ—Ç–ª–∞–Ω–∞ –í—è—á–µ—Å–ª–∞–≤–æ–≤–Ω–∞ \n" + \
           "  <b>8.</b> –ó—é–∑–∏–Ω –°–µ—Ä–≥–µ–π –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á\n\n" + \
           "–£–∑–Ω–∞–ª –≤—Å–µ, —á—Ç–æ —Ö–æ—Ç–µ–ª? –¢–æ–≥–¥–∞ –ø–∏—à–∏ –≤ —á–∞—Ç ‚Üí <b>/start</b> –∏ —É–∑–Ω–∞–≤–∞–π —á—Ç–æ —Ç–æ –Ω–æ–≤–µ–Ω—å–∫–æ–µüß°"
    await client.send_message(SENDER, text, parse_mode="HTML")


def press_event(user_id):
    return events.CallbackQuery(func=lambda e: e.sender_id == user_id)


if __name__ == '__main__':
    print("bot started")
    client.run_until_disconnected()
